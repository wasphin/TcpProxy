apply plugin: 'com.android.library'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14 -frtti -fexceptions"
            }
        }
        ndk {
            abiFilters "arm64-v8a"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}


//Copy类型
task copySdkAarDebug(type: Copy) {
    from('build/outputs/aar/')
    into('../proxydemo/libs/')
    include('proxysdk-debug.aar')
    rename ('proxysdk-debug.aar', 'proxysdk.aar')
}
//Copy类型
task copySdkAarRelease(type: Copy) {
    from('build/outputs/aar/')
    into('../proxydemo/libs/')
    include('proxysdk-release.aar')
    rename ('proxysdk-release.aar', 'proxysdk.aar')
}

afterEvaluate {
    tasks.matching {
        it.name.equals('compileDebugSources')
    }.each { task ->
        task.dependsOn(copySdkAarDebug)  // 任务依赖：执行task之前需要执行dependsOn指定的任务
    }

    tasks.matching {
        it.name.equals('compileReleaseSources')
    }.each { task ->
        task.dependsOn(copySdkAarRelease)  // 任务依赖：执行task之前需要执行dependsOn指定的任务
    }
}